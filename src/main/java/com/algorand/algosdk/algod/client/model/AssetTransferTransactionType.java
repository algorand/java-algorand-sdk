/*
 * Algod REST API.
 * API Endpoint for AlgoD Operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.algorand.algosdk.algod.client.model;

import org.apache.commons.lang3.ObjectUtils;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AssetTransferTransactionType contains the additional fields for an asset transfer transaction
 */
@ApiModel(description = "AssetTransferTransactionType contains the additional fields for an asset transfer transaction")

public class AssetTransferTransactionType {
  @SerializedName("amt")
  private java.math.BigInteger amt = null;

  @SerializedName("closeto")
  private String closeto = null;

  @SerializedName("id")
  private java.math.BigInteger id = null;

  @SerializedName("rcv")
  private String rcv = null;

  @SerializedName("snd")
  private String snd = null;

  public AssetTransferTransactionType amt(java.math.BigInteger amt) {
    this.amt = amt;
    return this;
  }

   /**
   * Amount is the amount being transferred.
   * @return amt
  **/
  @ApiModelProperty(required = true, value = "Amount is the amount being transferred.")
  public java.math.BigInteger getAmt() {
    return amt;
  }

  public void setAmt(java.math.BigInteger amt) {
    this.amt = amt;
  }

  public AssetTransferTransactionType closeto(String closeto) {
    this.closeto = closeto;
    return this;
  }

   /**
   * CloseTo is the destination for remaining funds (if closing).
   * @return closeto
  **/
  @ApiModelProperty(value = "CloseTo is the destination for remaining funds (if closing).")
  public String getCloseto() {
    return closeto;
  }

  public void setCloseto(String closeto) {
    this.closeto = closeto;
  }

  public AssetTransferTransactionType id(java.math.BigInteger id) {
    this.id = id;
    return this;
  }

   /**
   * AssetID is the asset being configured (or empty if creating)
   * @return id
  **/
  @ApiModelProperty(required = true, value = "AssetID is the asset being configured (or empty if creating)")
  public java.math.BigInteger getId() {
    return id;
  }

  public void setId(java.math.BigInteger id) {
    this.id = id;
  }

  public AssetTransferTransactionType rcv(String rcv) {
    this.rcv = rcv;
    return this;
  }

   /**
   * Receiver is the recipient account.
   * @return rcv
  **/
  @ApiModelProperty(required = true, value = "Receiver is the recipient account.")
  public String getRcv() {
    return rcv;
  }

  public void setRcv(String rcv) {
    this.rcv = rcv;
  }

  public AssetTransferTransactionType snd(String snd) {
    this.snd = snd;
    return this;
  }

   /**
   * Sender is the source account (if using clawback).
   * @return snd
  **/
  @ApiModelProperty(value = "Sender is the source account (if using clawback).")
  public String getSnd() {
    return snd;
  }

  public void setSnd(String snd) {
    this.snd = snd;
  }


  @Override
  public boolean equals(java.lang.Object o) {
  if (this == o) {
    return true;
  }
  if (o == null || getClass() != o.getClass()) {
    return false;
  }
    AssetTransferTransactionType assetTransferTransactionType = (AssetTransferTransactionType) o;
    return ObjectUtils.equals(this.amt, assetTransferTransactionType.amt) &&
    ObjectUtils.equals(this.closeto, assetTransferTransactionType.closeto) &&
    ObjectUtils.equals(this.id, assetTransferTransactionType.id) &&
    ObjectUtils.equals(this.rcv, assetTransferTransactionType.rcv) &&
    ObjectUtils.equals(this.snd, assetTransferTransactionType.snd);
  }

  @Override
  public int hashCode() {
    return ObjectUtils.hashCodeMulti(amt, closeto, id, rcv, snd);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssetTransferTransactionType {\n");
    
    sb.append("    amt: ").append(toIndentedString(amt)).append("\n");
    sb.append("    closeto: ").append(toIndentedString(closeto)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    rcv: ").append(toIndentedString(rcv)).append("\n");
    sb.append("    snd: ").append(toIndentedString(snd)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

