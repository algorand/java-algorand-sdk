/*
 * Algod REST API.
 * API Endpoint for AlgoD Operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.algorand.algosdk.algod.client.model;

import org.apache.commons.lang3.ObjectUtils;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
/**
 * AssetParams specifies the parameteres for an asset
 */

@ApiModel(description = "AssetParams specifies the parameters for an asset")
public class AssetParams {
  @SerializedName("assetname")
  private String assetname = null;

  @SerializedName("clawbackaddr")
  private String clawbackaddr = null;

  @SerializedName("creator")
  private String creator = null;

  @SerializedName("decimals")
  private Integer decimals = null;

  @SerializedName("defaultfrozen")
  private Boolean defaultfrozen = null;

  @SerializedName("freezeaddr")
  private String freezeaddr = null;

  @SerializedName("managerkey")
  private String managerkey = null;

  @SerializedName("metadatahash")
  private byte[] metadatahash = null;

  @SerializedName("reserveaddr")
  private String reserveaddr = null;

  @SerializedName("total")
  private Integer total = null;

  @SerializedName("unitname")
  private String unitname = null;

  @SerializedName("url")
  private String url = null;

  public AssetParams assetname(String assetname) {
    this.assetname = assetname;
    return this;
  }

   /**
   * AssetName specifies the name of this asset, as supplied by the creator.
   * @return assetname
  **/
  @ApiModelProperty(value = "AssetName specifies the name of this asset, as supplied by the creator.")
  public String getAssetname() {
    return assetname;
  }

  public void setAssetname(String assetname) {
    this.assetname = assetname;
  }

  public AssetParams clawbackaddr(String clawbackaddr) {
    this.clawbackaddr = clawbackaddr;
    return this;
  }

   /**
   * ClawbackAddr specifies the address used to clawback holdings of this asset.  If empty, clawback is not permitted.
   * @return clawbackaddr
  **/
  @ApiModelProperty(value = "ClawbackAddr specifies the address used to clawback holdings of this asset.  If empty, clawback is not permitted.")
  public String getClawbackaddr() {
    return clawbackaddr;
  }

  public void setClawbackaddr(String clawbackaddr) {
    this.clawbackaddr = clawbackaddr;
  }

  public AssetParams creator(String creator) {
    this.creator = creator;
    return this;
  }

   /**
   * Creator specifies the address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case.
   * @return creator
  **/
  @ApiModelProperty(required = true, value = "Creator specifies the address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case.")
  public String getCreator() {
    return creator;
  }

  public void setCreator(String creator) {
    this.creator = creator;
  }

  public AssetParams decimals(Integer decimals) {
    this.decimals = decimals;
    return this;
  }

   /**
   * Decimals specifies the decimal precision of units of this asset.
   * @return decimals
  **/
  @ApiModelProperty(required = true, value = "Decimals specifies the decimal precision of units of this asset.")
  public Integer getDecimals() {
    return decimals;
  }

  public void setDecimals(Integer decimals) {
    this.decimals = decimals;
  }

  public AssetParams defaultfrozen(Boolean defaultfrozen) {
    this.defaultfrozen = defaultfrozen;
    return this;
  }

   /**
   * DefaultFrozen specifies whether holdings in this asset are frozen by default.
   * @return defaultfrozen
  **/
  @ApiModelProperty(value = "DefaultFrozen specifies whether holdings in this asset are frozen by default.")
  public Boolean isDefaultfrozen() {
    return defaultfrozen;
  }

  public void setDefaultfrozen(Boolean defaultfrozen) {
    this.defaultfrozen = defaultfrozen;
  }

  public AssetParams freezeaddr(String freezeaddr) {
    this.freezeaddr = freezeaddr;
    return this;
  }

   /**
   * FreezeAddr specifies the address used to freeze holdings of this asset.  If empty, freezing is not permitted.
   * @return freezeaddr
  **/
  @ApiModelProperty(value = "FreezeAddr specifies the address used to freeze holdings of this asset.  If empty, freezing is not permitted.")
  public String getFreezeaddr() {
    return freezeaddr;
  }

  public void setFreezeaddr(String freezeaddr) {
    this.freezeaddr = freezeaddr;
  }

  public AssetParams managerkey(String managerkey) {
    this.managerkey = managerkey;
    return this;
  }

   /**
   * ManagerAddr specifies the address used to manage the keys of this asset and to destroy it.
   * @return managerkey
  **/
  @ApiModelProperty(value = "ManagerAddr specifies the address used to manage the keys of this asset and to destroy it.")
  public String getManagerkey() {
    return managerkey;
  }

  public void setManagerkey(String managerkey) {
    this.managerkey = managerkey;
  }

  public AssetParams metadatahash(byte[] metadatahash) {
    this.metadatahash = metadatahash;
    return this;
  }

   /**
   * MetadataHash specifies a commitment to some unspecified asset metadata. The format of this metadata is up to the application.
   * @return metadatahash
  **/
  @ApiModelProperty(value = "MetadataHash specifies a commitment to some unspecified asset metadata. The format of this metadata is up to the application.")
  public byte[] getMetadatahash() {
    return metadatahash;
  }

  public void setMetadatahash(byte[] metadatahash) {
    this.metadatahash = metadatahash;
  }

  public AssetParams reserveaddr(String reserveaddr) {
    this.reserveaddr = reserveaddr;
    return this;
  }

   /**
   * ReserveAddr specifies the address holding reserve (non-minted) units of this asset.
   * @return reserveaddr
  **/
  @ApiModelProperty(value = "ReserveAddr specifies the address holding reserve (non-minted) units of this asset.")
  public String getReserveaddr() {
    return reserveaddr;
  }

  public void setReserveaddr(String reserveaddr) {
    this.reserveaddr = reserveaddr;
  }

  public AssetParams total(Integer total) {
    this.total = total;
    return this;
  }

   /**
   * Total specifies the total number of units of this asset.
   * @return total
  **/
  @ApiModelProperty(required = true, value = "Total specifies the total number of units of this asset.")
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }

  public AssetParams unitname(String unitname) {
    this.unitname = unitname;
    return this;
  }

   /**
   * UnitName specifies the name of a unit of this asset, as supplied by the creator.
   * @return unitname
  **/
  @ApiModelProperty(value = "UnitName specifies the name of a unit of this asset, as supplied by the creator.")
  public String getUnitname() {
    return unitname;
  }

  public void setUnitname(String unitname) {
    this.unitname = unitname;
  }

  public AssetParams url(String url) {
    this.url = url;
    return this;
  }

   /**
   * URL specifies a URL where more information about the asset can be retrieved
   * @return url
  **/
  @ApiModelProperty(value = "URL specifies a URL where more information about the asset can be retrieved")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
  if (this == o) {
    return true;
  }
  if (o == null || getClass() != o.getClass()) {
    return false;
  }
    AssetParams assetParams = (AssetParams) o;
    return ObjectUtils.equals(this.assetname, assetParams.assetname) &&
    ObjectUtils.equals(this.clawbackaddr, assetParams.clawbackaddr) &&
    ObjectUtils.equals(this.creator, assetParams.creator) &&
    ObjectUtils.equals(this.decimals, assetParams.decimals) &&
    ObjectUtils.equals(this.defaultfrozen, assetParams.defaultfrozen) &&
    ObjectUtils.equals(this.freezeaddr, assetParams.freezeaddr) &&
    ObjectUtils.equals(this.managerkey, assetParams.managerkey) &&
    ObjectUtils.equals(this.metadatahash, assetParams.metadatahash) &&
    ObjectUtils.equals(this.reserveaddr, assetParams.reserveaddr) &&
    ObjectUtils.equals(this.total, assetParams.total) &&
    ObjectUtils.equals(this.unitname, assetParams.unitname) &&
    ObjectUtils.equals(this.url, assetParams.url);
  }

  @Override
  public int hashCode() {
    return ObjectUtils.hashCodeMulti(assetname, clawbackaddr, creator, decimals, defaultfrozen, freezeaddr, managerkey, metadatahash, reserveaddr, total, unitname, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssetParams {\n");
    
    sb.append("    assetname: ").append(toIndentedString(assetname)).append("\n");
    sb.append("    clawbackaddr: ").append(toIndentedString(clawbackaddr)).append("\n");
    //  creator is skipped to match with Transaction.AssetParams
    sb.append("    decimals: ").append(toIndentedString(decimals)).append("\n");
    sb.append("    defaultfrozen: ").append(toIndentedString(defaultfrozen)).append("\n");
    sb.append("    freezeaddr: ").append(toIndentedString(freezeaddr)).append("\n");
    sb.append("    managerkey: ").append(toIndentedString(managerkey)).append("\n");
    sb.append("    metadatahash: ").append(toIndentedString(metadatahash)).append("\n");
    sb.append("    reserveaddr: ").append(toIndentedString(reserveaddr)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    unitname: ").append(toIndentedString(unitname)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
