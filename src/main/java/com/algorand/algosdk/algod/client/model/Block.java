/*
 * Algod REST API.
 * API Endpoint for AlgoD Operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.algorand.algosdk.algod.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.apache.commons.lang3.ObjectUtils;

/**
 * Block contains a block information
 */
@ApiModel(description = "Block contains a block information")

public class Block {
  @SerializedName("currentProtocol")
  private String currentProtocol = null;

  @SerializedName("frac")
  private java.math.BigInteger frac = null;

  @SerializedName("hash")
  private String hash = null;

  @SerializedName("nextProtocol")
  private String nextProtocol = null;

  @SerializedName("nextProtocolApprovals")
  private java.math.BigInteger nextProtocolApprovals = null;

  @SerializedName("nextProtocolSwitchOn")
  private java.math.BigInteger nextProtocolSwitchOn = null;

  @SerializedName("nextProtocolVoteBefore")
  private java.math.BigInteger nextProtocolVoteBefore = null;

  @SerializedName("period")
  private java.math.BigInteger period = null;

  @SerializedName("previousBlockHash")
  private String previousBlockHash = null;

  @SerializedName("proposer")
  private String proposer = null;

  @SerializedName("rate")
  private java.math.BigInteger rate = null;

  @SerializedName("reward")
  private java.math.BigInteger reward = null;

  @SerializedName("round")
  private java.math.BigInteger round = null;

  @SerializedName("seed")
  private String seed = null;

  @SerializedName("timestamp")
  private java.math.BigInteger timestamp = null;

  @SerializedName("txnRoot")
  private String txnRoot = null;

  @SerializedName("txns")
  private TransactionList txns = null;

  @SerializedName("upgradeApprove")
  private Boolean upgradeApprove = null;

  @SerializedName("upgradePropose")
  private String upgradePropose = null;

  public Block currentProtocol(String currentProtocol) {
    this.currentProtocol = currentProtocol;
    return this;
  }

   /**
   * CurrentProtocol is a string that represents the current protocol
   * @return currentProtocol
  **/
  @ApiModelProperty(required = true, value = "CurrentProtocol is a string that represents the current protocol")
  public String getCurrentProtocol() {
    return currentProtocol;
  }

  public void setCurrentProtocol(String currentProtocol) {
    this.currentProtocol = currentProtocol;
  }

  public Block frac(java.math.BigInteger frac) {
    this.frac = frac;
    return this;
  }

   /**
   * The number of leftover MicroAlgos after the distribution of RewardsRate/rewardUnits MicroAlgos for every reward unit in the next round.
   * @return frac
  **/
  @ApiModelProperty(value = "The number of leftover MicroAlgos after the distribution of RewardsRate/rewardUnits MicroAlgos for every reward unit in the next round.")
  public java.math.BigInteger getFrac() {
    return frac;
  }

  public void setFrac(java.math.BigInteger frac) {
    this.frac = frac;
  }

  public Block hash(String hash) {
    this.hash = hash;
    return this;
  }

   /**
   * Hash is the current block hash
   * @return hash
  **/
  @ApiModelProperty(required = true, value = "Hash is the current block hash")
  public String getHash() {
    return hash;
  }

  public void setHash(String hash) {
    this.hash = hash;
  }

  public Block nextProtocol(String nextProtocol) {
    this.nextProtocol = nextProtocol;
    return this;
  }

   /**
   * NextProtocol is a string that represents the next proposed protocol
   * @return nextProtocol
  **/
  @ApiModelProperty(required = true, value = "NextProtocol is a string that represents the next proposed protocol")
  public String getNextProtocol() {
    return nextProtocol;
  }

  public void setNextProtocol(String nextProtocol) {
    this.nextProtocol = nextProtocol;
  }

  public Block nextProtocolApprovals(java.math.BigInteger nextProtocolApprovals) {
    this.nextProtocolApprovals = nextProtocolApprovals;
    return this;
  }

   /**
   * NextProtocolApprovals is the number of blocks which approved the protocol upgrade
   * @return nextProtocolApprovals
  **/
  @ApiModelProperty(required = true, value = "NextProtocolApprovals is the number of blocks which approved the protocol upgrade")
  public java.math.BigInteger getNextProtocolApprovals() {
    return nextProtocolApprovals;
  }

  public void setNextProtocolApprovals(java.math.BigInteger nextProtocolApprovals) {
    this.nextProtocolApprovals = nextProtocolApprovals;
  }

  public Block nextProtocolSwitchOn(java.math.BigInteger nextProtocolSwitchOn) {
    this.nextProtocolSwitchOn = nextProtocolSwitchOn;
    return this;
  }

   /**
   * NextProtocolSwitchOn is the round on which the protocol upgrade will take effect
   * @return nextProtocolSwitchOn
  **/
  @ApiModelProperty(required = true, value = "NextProtocolSwitchOn is the round on which the protocol upgrade will take effect")
  public java.math.BigInteger getNextProtocolSwitchOn() {
    return nextProtocolSwitchOn;
  }

  public void setNextProtocolSwitchOn(java.math.BigInteger nextProtocolSwitchOn) {
    this.nextProtocolSwitchOn = nextProtocolSwitchOn;
  }

  public Block nextProtocolVoteBefore(java.math.BigInteger nextProtocolVoteBefore) {
    this.nextProtocolVoteBefore = nextProtocolVoteBefore;
    return this;
  }

   /**
   * NextProtocolVoteBefore is the deadline round for this protocol upgrade (No votes will be consider after this round)
   * @return nextProtocolVoteBefore
  **/
  @ApiModelProperty(required = true, value = "NextProtocolVoteBefore is the deadline round for this protocol upgrade (No votes will be consider after this round)")
  public java.math.BigInteger getNextProtocolVoteBefore() {
    return nextProtocolVoteBefore;
  }

  public void setNextProtocolVoteBefore(java.math.BigInteger nextProtocolVoteBefore) {
    this.nextProtocolVoteBefore = nextProtocolVoteBefore;
  }

  public Block period(java.math.BigInteger period) {
    this.period = period;
    return this;
  }

   /**
   * Period is the period on which the block was confirmed
   * @return period
  **/
  @ApiModelProperty(required = true, value = "Period is the period on which the block was confirmed")
  public java.math.BigInteger getPeriod() {
    return period;
  }

  public void setPeriod(java.math.BigInteger period) {
    this.period = period;
  }

  public Block previousBlockHash(String previousBlockHash) {
    this.previousBlockHash = previousBlockHash;
    return this;
  }

   /**
   * PreviousBlockHash is the previous block hash
   * @return previousBlockHash
  **/
  @ApiModelProperty(required = true, value = "PreviousBlockHash is the previous block hash")
  public String getPreviousBlockHash() {
    return previousBlockHash;
  }

  public void setPreviousBlockHash(String previousBlockHash) {
    this.previousBlockHash = previousBlockHash;
  }

  public Block proposer(String proposer) {
    this.proposer = proposer;
    return this;
  }

   /**
   * Proposer is the address of this block proposer
   * @return proposer
  **/
  @ApiModelProperty(required = true, value = "Proposer is the address of this block proposer")
  public String getProposer() {
    return proposer;
  }

  public void setProposer(String proposer) {
    this.proposer = proposer;
  }

  public Block rate(java.math.BigInteger rate) {
    this.rate = rate;
    return this;
  }

   /**
   * The number of new MicroAlgos added to the participation stake from rewards at the next round.
   * @return rate
  **/
  @ApiModelProperty(value = "The number of new MicroAlgos added to the participation stake from rewards at the next round.")
  public java.math.BigInteger getRate() {
    return rate;
  }

  public void setRate(java.math.BigInteger rate) {
    this.rate = rate;
  }

  public Block reward(java.math.BigInteger reward) {
    this.reward = reward;
    return this;
  }

   /**
   * RewardsLevel specifies how many rewards, in MicroAlgos, have been distributed to each config.Protocol.RewardUnit of MicroAlgos since genesis.
   * @return reward
  **/
  @ApiModelProperty(value = "RewardsLevel specifies how many rewards, in MicroAlgos, have been distributed to each config.Protocol.RewardUnit of MicroAlgos since genesis.")
  public java.math.BigInteger getReward() {
    return reward;
  }

  public void setReward(java.math.BigInteger reward) {
    this.reward = reward;
  }

  public Block round(java.math.BigInteger round) {
    this.round = round;
    return this;
  }

   /**
   * Round is the current round on which this block was appended to the chain
   * @return round
  **/
  @ApiModelProperty(required = true, value = "Round is the current round on which this block was appended to the chain")
  public java.math.BigInteger getRound() {
    return round;
  }

  public void setRound(java.math.BigInteger round) {
    this.round = round;
  }

  public Block seed(String seed) {
    this.seed = seed;
    return this;
  }

   /**
   * Seed is the sortition seed
   * @return seed
  **/
  @ApiModelProperty(required = true, value = "Seed is the sortition seed")
  public String getSeed() {
    return seed;
  }

  public void setSeed(String seed) {
    this.seed = seed;
  }

  public Block timestamp(java.math.BigInteger timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * TimeStamp in seconds since epoch
   * @return timestamp
  **/
  @ApiModelProperty(required = true, value = "TimeStamp in seconds since epoch")
  public java.math.BigInteger getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(java.math.BigInteger timestamp) {
    this.timestamp = timestamp;
  }

  public Block txnRoot(String txnRoot) {
    this.txnRoot = txnRoot;
    return this;
  }

   /**
   * TransactionsRoot authenticates the set of transactions appearing in the block. More specifically, it&#39;s the root of a merkle tree whose leaves are the block&#39;s Txids, in lexicographic order. For the empty block, it&#39;s 0. Note that the TxnRoot does not authenticate the signatures on the transactions, only the transactions themselves. Two blocks with the same transactions but in a different order and with different signatures will have the same TxnRoot.
   * @return txnRoot
  **/
  @ApiModelProperty(required = true, value = "TransactionsRoot authenticates the set of transactions appearing in the block. More specifically, it's the root of a merkle tree whose leaves are the block's Txids, in lexicographic order. For the empty block, it's 0. Note that the TxnRoot does not authenticate the signatures on the transactions, only the transactions themselves. Two blocks with the same transactions but in a different order and with different signatures will have the same TxnRoot.")
  public String getTxnRoot() {
    return txnRoot;
  }

  public void setTxnRoot(String txnRoot) {
    this.txnRoot = txnRoot;
  }

  public Block txns(TransactionList txns) {
    this.txns = txns;
    return this;
  }

   /**
   * Get txns
   * @return txns
  **/
  @ApiModelProperty(value = "")
  public TransactionList getTxns() {
    return txns;
  }

  public void setTxns(TransactionList txns) {
    this.txns = txns;
  }

  public Block upgradeApprove(Boolean upgradeApprove) {
    this.upgradeApprove = upgradeApprove;
    return this;
  }

   /**
   * UpgradeApprove indicates a yes vote for the current proposal
   * @return upgradeApprove
  **/
  @ApiModelProperty(required = true, value = "UpgradeApprove indicates a yes vote for the current proposal")
  public Boolean isUpgradeApprove() {
    return upgradeApprove;
  }

  public void setUpgradeApprove(Boolean upgradeApprove) {
    this.upgradeApprove = upgradeApprove;
  }

  public Block upgradePropose(String upgradePropose) {
    this.upgradePropose = upgradePropose;
    return this;
  }

   /**
   * UpgradePropose indicates a proposed upgrade
   * @return upgradePropose
  **/
  @ApiModelProperty(required = true, value = "UpgradePropose indicates a proposed upgrade")
  public String getUpgradePropose() {
    return upgradePropose;
  }

  public void setUpgradePropose(String upgradePropose) {
    this.upgradePropose = upgradePropose;
  }


  @Override
  public boolean equals(java.lang.Object o) {
  if (this == o) {
    return true;
  }
  if (o == null || getClass() != o.getClass()) {
    return false;
  }
    Block block = (Block) o;
    return ObjectUtils.equals(this.currentProtocol, block.currentProtocol) &&
    ObjectUtils.equals(this.frac, block.frac) &&
    ObjectUtils.equals(this.hash, block.hash) &&
    ObjectUtils.equals(this.nextProtocol, block.nextProtocol) &&
    ObjectUtils.equals(this.nextProtocolApprovals, block.nextProtocolApprovals) &&
    ObjectUtils.equals(this.nextProtocolSwitchOn, block.nextProtocolSwitchOn) &&
    ObjectUtils.equals(this.nextProtocolVoteBefore, block.nextProtocolVoteBefore) &&
    ObjectUtils.equals(this.period, block.period) &&
    ObjectUtils.equals(this.previousBlockHash, block.previousBlockHash) &&
    ObjectUtils.equals(this.proposer, block.proposer) &&
    ObjectUtils.equals(this.rate, block.rate) &&
    ObjectUtils.equals(this.reward, block.reward) &&
    ObjectUtils.equals(this.round, block.round) &&
    ObjectUtils.equals(this.seed, block.seed) &&
    ObjectUtils.equals(this.timestamp, block.timestamp) &&
    ObjectUtils.equals(this.txnRoot, block.txnRoot) &&
    ObjectUtils.equals(this.txns, block.txns) &&
    ObjectUtils.equals(this.upgradeApprove, block.upgradeApprove) &&
    ObjectUtils.equals(this.upgradePropose, block.upgradePropose);
  }

  @Override
  public int hashCode() {
    return ObjectUtils.hashCodeMulti(currentProtocol, frac, hash, nextProtocol, nextProtocolApprovals, nextProtocolSwitchOn, nextProtocolVoteBefore, period, previousBlockHash, proposer, rate, reward, round, seed, timestamp, txnRoot, txns, upgradeApprove, upgradePropose);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Block {\n");
    
    sb.append("    currentProtocol: ").append(toIndentedString(currentProtocol)).append("\n");
    sb.append("    frac: ").append(toIndentedString(frac)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    nextProtocol: ").append(toIndentedString(nextProtocol)).append("\n");
    sb.append("    nextProtocolApprovals: ").append(toIndentedString(nextProtocolApprovals)).append("\n");
    sb.append("    nextProtocolSwitchOn: ").append(toIndentedString(nextProtocolSwitchOn)).append("\n");
    sb.append("    nextProtocolVoteBefore: ").append(toIndentedString(nextProtocolVoteBefore)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    previousBlockHash: ").append(toIndentedString(previousBlockHash)).append("\n");
    sb.append("    proposer: ").append(toIndentedString(proposer)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("    reward: ").append(toIndentedString(reward)).append("\n");
    sb.append("    round: ").append(toIndentedString(round)).append("\n");
    sb.append("    seed: ").append(toIndentedString(seed)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    txnRoot: ").append(toIndentedString(txnRoot)).append("\n");
    sb.append("    txns: ").append(toIndentedString(txns)).append("\n");
    sb.append("    upgradeApprove: ").append(toIndentedString(upgradeApprove)).append("\n");
    sb.append("    upgradePropose: ").append(toIndentedString(upgradePropose)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

