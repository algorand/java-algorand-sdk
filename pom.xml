<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.algorand</groupId>
    <artifactId>algosdk</artifactId>
    <version>2.8.2</version>
    <packaging>jar</packaging>

    <name>${project.groupId}:${project.artifactId}</name>
    <description>Client library for Algorand</description>
    <url>https://github.com/algorand/java-algorand-sdk</url>

    <scm>
        <connection>scm:git:git@github.com:algorand/java-algorand-sdk.git</connection>
        <developerConnection>scm:git:git@github.com:algorand/java-algorand-sdk.git</developerConnection>
        <url>https://github.com/algorand/java-algorand-sdk</url>
    </scm>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://github.com/algorand/java-algorand-sdk/blob/master/LICENSE</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Benjamin Chan</name>
            <email>ben.chan@algorand.com</email>
        </developer>
    </developers>

    <properties>
        <junit5.version>5.6.2</junit5.version>
        <assertj.version>3.17.1</assertj.version>
        <cucumber.version>6.6.0</cucumber.version>
        <mockito.version>3.5.7</mockito.version>
        <jackson.version>2.18.2</jackson.version>
        <jacksonmsgp.version>0.9.9</jacksonmsgp.version>
        <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
        <maven.javadoc.plugin.version>3.2.0</maven.javadoc.plugin.version>
        <maven.surefire.version>3.0.0-M5</maven.surefire.version>
        <maven.site.plugin.version>3.7.1</maven.site.plugin.version>
        <maven.project.info.reports.plugin.version>3.0.0</maven.project.info.reports.plugin.version>


        <!-- Test sources at 1.8 to allow using JUnit5 -->
        <java.version>1.8</java.version>
        <java.release.version>8</java.release.version>
        <java.test.release.version>8</java.test.release.version>

        <!-- github server corresponds to entry in ~/.m2/settings.xml -->
        <github.global.server>github</github.global.server>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
          <version>2.18.2</version>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
          <version>2.18.2</version>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
          <version>2.18.2</version>
        </dependency>
        <dependency>
          <groupId>com.google.code.gson</groupId>
          <artifactId>gson</artifactId>
          <version>2.8.9</version>
        </dependency>
        <dependency>
          <groupId>com.squareup.okhttp</groupId>
          <artifactId>logging-interceptor</artifactId>
          <version>2.7.5</version>
        </dependency>
        <dependency>
          <groupId>com.squareup.okhttp</groupId>
          <artifactId>okhttp</artifactId>
          <version>2.7.5</version>
        </dependency>
        <dependency>
          <groupId>com.squareup.okio</groupId>
          <artifactId>okio</artifactId>
          <version>1.17.6</version>
        </dependency>
        <dependency>
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
          <!-- version 1.14 adds some stronger constraints to base64 encoding which breaks a test. -->
          <version>1.12</version>
        </dependency>
        <dependency>
          <groupId>io.gsonfire</groupId>
          <artifactId>gson-fire</artifactId>
          <version>1.9.0</version>
        </dependency>
        <dependency>
          <groupId>io.swagger</groupId>
          <artifactId>swagger-annotations</artifactId>
          <version>1.5.18</version>
        </dependency>
        <dependency>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-lang3</artifactId>
          <!-- this is the last version with java 1.7 support -->
          <version>3.8.1</version>
        </dependency>
        <dependency>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bcprov-jdk15to18</artifactId>
          <version>1.78.1</version>
        </dependency>
        <dependency>
          <groupId>org.msgpack</groupId>
          <artifactId>jackson-dataformat-msgpack</artifactId>
          <version>0.9.9</version>
        </dependency>
        <dependency>
          <groupId>org.threeten</groupId>
          <artifactId>threetenbp</artifactId>
          <version>1.3.5</version>
        </dependency>
        <dependency>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
          <version>32.0.1-jre</version>
        </dependency>

        <!-- test dependencies -->

        <!-- assertions library -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.17.1</version>
            <scope>test</scope>
        </dependency>

        <!-- junit 5 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.6.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.6.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>5.8.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>5.6.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>3.5.7</version>
            <scope>test</scope>
        </dependency>

        <!-- cucumber -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>6.6.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>6.8.2</version>
            <scope>test</scope>
        </dependency>

        <!-- cucumber dependency injection -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-picocontainer</artifactId>
            <version>6.6.0</version>
            <scope>test</scope>
        </dependency>

        <!-- end test dependencies -->
    </dependencies>

    <build>
      <plugins>
        <!-- Newer version of surefire plugin for running JUnit5 tests. -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven.surefire.version}</version>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
            <executions>
              <execution>
                <id>unit-tests</id>
                <phase>test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skipTests>false</skipTests>
                  <includes>
                    <include>**/*.*</include>
                  </includes>
                </configuration>
              </execution>
            </executions>
        </plugin>
      </plugins>
    </build>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven.compiler.plugin.version}</version>
                        <configuration>
                            <release>${java.release.version}</release>
                            <testRelease>${java.test.release.version}</testRelease>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- IDE Profile: https://youtrack.jetbrains.com/issue/IDEA-85478#focus=streamItem-27-1994481.0-0 -->
        <!-- Note: IntelliJ doesn't support different targets: https://youtrack.jetbrains.com/issue/IDEA-85478 -->
        <!-- Automatically activated when IDEA sets a property, putting this second overrides source/target. -->
        <profile>
            <id>ide</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>idea.maven.embedder.version</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven.compiler.plugin.version}</version>
                        <configuration>
                            <release>${java.test.release.version}</release>
                            <testRelease>${java.test.release.version}</testRelease>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!--
                Maven release profile.
                'mvn clean deploy -P release'

                Update settings.xml with the following server configuration:
                  <settings>
                   <servers>
                     <server>
                       <id>ossrh</id>
                       <username>your-jira-id</username>
                       <password>your-jira-pwd</password>
                     </server>
                   </servers>
                 </settings>
            -->
            <id>release</id>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.central</groupId>
                        <artifactId>central-publishing-maven-plugin</artifactId>
                        <version>0.7.0</version>
                        <extensions>true</extensions>
                        <configuration>
                            <publishingServerId>central</publishingServerId>
                            <autoPublish>true</autoPublish>
                        </configuration>
                    </plugin>

                    <!-- generate sources jar -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>2.2.1</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- generate javadoc jar -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${maven.javadoc.plugin.version}</version>
                        <configuration>
                          <source>${java.version}</source>
                          <doclint>none</doclint>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- gpg signing -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- This is necessary for gpg to not try to use the pinentry programs -->
                            <gpgArguments>
                                <arg>--pinentry-mode</arg>
                                <arg>loopback</arg>
                            </gpgArguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>github</id>
            <distributionManagement>
                <repository>
                    <id>local-mvn-repo</id> <!-- Distinct ID to avoid conflict with global 'github' ID -->
                    <name>Temporary Staging Repository for mvn-repo branch</name>
                    <url>file://${project.build.directory}/mvn-repo</url>
                </repository>
            </distributionManagement>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <version>2.8.1</version>
                        <configuration>
                            <!-- Deploy to the local file system as defined in this profile's distributionManagement -->
                            <altDeploymentRepository>local-mvn-repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                        </configuration>
                        <executions>
                            <execution>
                                <id>deploy-to-local-repo</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${maven.javadoc.plugin.version}</version>
                        <configuration>
                            <source>${java.version}</source>
                            <doclint>none</doclint>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs-to-site</id>
                                <goals>
                                    <goal>javadoc</goal>
                                </goals>
                                <phase>site</phase> <!-- Bind to the site phase to generate Javadocs as part of mvn site -->
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <version>${maven.site.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>default-site</id>
                                <phase>site</phase>
                                <goals>
                                    <goal>site</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/site</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-project-info-reports-plugin</artifactId>
                        <version>${maven.project.info.reports.plugin.version}</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
